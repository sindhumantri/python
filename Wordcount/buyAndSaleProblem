#General method O(n)^2
def findBuyAndSalePrice(arr):
	profit = 0
	buy = 0
	for i in range(len(arr)):
		buying = arr[i]
		for j in range(i+1,len(arr)):
			res = arr[j]-buying
			if res > profit:
				buy = arr[i]
				profit = res
	return profit,buy

profit,buy = findBuyAndSalePrice([100,80,20,40,120,60])
print("buy at %d ---> get profit %d" %(buy,profit))

#Using Dynamic programming in O(n)
def buyAndSale(arr):
	minimumPrice = arr[0]
	profit = 0
	for i in range(arr):
		profit = max(profit, arr[i]-minimumPrice)
		minimumPrice = min(arr[i], minimumPrice)
	return minimumPrice, profit

profit,buy = findBuyAndSalePrice([100,80,20,40,120,60])
print("buy at %d ---> get profit %d" %(buy,profit))
